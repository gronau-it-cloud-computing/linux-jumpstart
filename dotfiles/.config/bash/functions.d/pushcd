# Sometimes you just want a plain old cd/popd/pushd
bcd()
{
	builtin cd "$@"
}

bpopd()
{
	builtin popd "$@"
}

bpushd()
{
	builtin pushd "$@"
}

# Wrap cd -L and cd -P
cd_opt()
{
	# Push a copy of PWD onto the stack
	bpushd -n "$PWD" > /dev/null || return $?
	# Replace DIRSTACK[0] by cding
	bcd "$@"
}

# Determine how to handle cd -
cd_dash()
{
	[ "$OLDPWD" == "${DIRSTACK[1]}" ] \
		&& bpushd > /dev/null \
		|| bpushd "$OLDPWD" > /dev/null
}

# Make cd a function so that cding manipulates dirstack
cd()
{
	local dir=''

	# Determine where to cd to
	case "$1" in
		# cd with no args or the arg ~ should go HOME
		'')
			dir="$HOME"
		;;
		'~')
			dir="$HOME"
		;;
		-[LP])
			cd_opt "$@"
			return $?
		;;
		'-')
			cd_dash
			return $?
		;;
		# Special cases are covered, just pushd the argument
		*)		dir="$1"
		;;
	esac

	# Don't put $HOME on the stack
	[ "$PWD" == "$HOME" ] \
		&& bcd "$dir" \
		|| bpushd "$dir" > /dev/null
}

# Add some nicities to popd
popd()
{
	# There are no arguments to popd and nothing to pop
	if [ -z "$1" ] && [ "${#DIRSTACK[@]}" -lt 2 ] ; then
			# cd to HOME instead of complaining
			bcd "$HOME"
			return $?
	fi

	# I don't want this stack anymore
	if [ "$1" == '-c' ] ; then
		builtin dirs -c

		local dir="${2:-$HOME}"
		bcd "$dir"
		return $?
	fi

	# popd as normal
	bpopd "$@"
}
