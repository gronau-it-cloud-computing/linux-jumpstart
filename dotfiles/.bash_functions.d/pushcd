# Make cd a function so that cding manipulates dirstack
cd()
{
	local dir=''

	# Determine where to cd to
	case "$1" in
		# cd with no args or the arg ~ should go HOME
		'')		dir="$HOME"
				;;
		'~')	dir="$HOME"
				;;
		'-')	dir="$OLDPWD"
				;;
		# Special cases are covered, just pushd the argument
		*)		dir="$1"
				;;
	esac

	# If we're in HOME, don't put it on the stack; it just creates clutter
	if [ "$PWD" == "$HOME" ] ; then
		builtin cd "$dir"
	else
		builtin pushd "$dir" > /dev/null
	fi

	# Return the executed command's exit status
	return $?
}

# Add some nicities to popd
popd()
{
	# There are no arguments to popd
	if [ -z "$1" ] ; then
		# There's nothing to pop
		if [ "$DIRSTACK" == "$(dirs)" ] ; then
			# cd to HOME instead of complaining
			builtin cd "$HOME"
			return $?
		fi
	fi

	# I don't want this stack anymore
	if [ "$1" == '-c' ] ; then
		builtin dirs -c

		local dir=''
		# Did we get an additional argument?
		if [ -n "$2" ] ; then
			# Where do we want our new stack to start?
			dir="$2"
		else
			dir="$HOME"
		fi

		builtin cd "$dir"
		return $?
	fi

	# popd as normal
	builtin popd "$@"
	return $?
}
